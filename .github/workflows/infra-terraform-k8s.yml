name: Terraform-AKS-Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  working-directory: infra_terraform
  working-directory-k8s: k8s\manifests
  ARM_CLIENT_ID: ${{secrets.TF_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.TF_ARM_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.TF_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.TF_TENANT_ID}}
  RESOURCE_GROUP: "tech-challenge"
  CLUSTER_NAME: "tech-challenge-aks-cluster"

permissions:
  id-token: write
  contents: read
  
jobs:          
  setup-terraform:
    runs-on: ubuntu-latest
   
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{env.working-directory}}

    - name: Terraform Validate
      id: validate
      run: terraform validate
      working-directory: ${{env.working-directory}}

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      working-directory: ${{env.working-directory}}

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
      working-directory: ${{env.working-directory}}
  
    # - name: Upload Terraform state
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: terraform-state
    #     path: .terraform
    
  deploy:
    needs: setup-terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Set up kubectl
      uses: azure/login@v1
      with:
        client-id: ${{secrets.TF_CLIENT_ID}}
        tenant-id: ${{secrets.TF_TENANT_ID}}
        subscription-id: ${{secrets.TF_SUBSCRIPTION_ID}}

    - name: Config kubectl
      uses: azure/aks-set-context@v3
      with:
        cluster-name: ${{env.RESOURCE_GROUP}}
        resource-group: ${{env.CLUSTER_NAME}}
        admin: 'false'
        use-kubelogin: 'true'

    - name: Kubectl apply
      run: kubectl apply -f ${{env.working-directory-k8s}}
  # conect-azure-devops:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: Azure/pipelines@v1
  #     with:
  #       azure-devops-project-url: 'https://dev.azure.com/group2-soat1/tech-challenge'
  #       azure-pipeline-name: 'Pos-Tech-Fiap-Group-2.infra-tech-challenge-k8s'
  #       azure-devops-token: '${{ secrets.AZURE_DEVOPS_TOKEN }}'
